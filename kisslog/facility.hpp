//  Copyright (c) 2012, Rob J Meijer
//
//
//Permission is hereby granted, free of charge, to any person or organization
//obtaining a copy of the software and accompanying documentation covered by
//this license (the "Software") to use, reproduce, display, distribute,
//execute, and transmit the Software, and to prepare derivative works of the
//Software, and to permit third-parties to whom the Software is furnished to
//do so, all subject to the following:
//
//The copyright notices in the Software and this entire statement, including
//the above license grant, this restriction and the following disclaimer,
//must be included in all copies of the Software, in whole or in part, and
//all derivative works of the Software, unless such copies or derivative
//works are solely in the form of machine-executable object code generated by
//a source language processor.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
//SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
//FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
//DEALINGS IN THE SOFTWARE.

#ifndef KISSLOG_FACILITY_HPP
#define KISSLOG_FACILITY_HPP
#ifndef WIN32
#include <syslog.h>
namespace kisslog {
  //An list of syslog facilities as simple classes. Note that these are not all possible
  //facilities, just the one a typical user space program will be using.
  namespace facility {
    struct DAEMON {
      static int asSyslogFacility() {
        return LOG_DAEMON;
      }
    };
    struct LOCAL0 {
      static int asSyslogFacility() {
        return LOG_LOCAL0;
      }
    };
    struct LOCAL1 {
      static int asSyslogFacility() {
        return LOG_LOCAL1;
      }
    };
    struct LOCAL2 {
      static int asSyslogFacility() {
        return LOG_LOCAL2;
      }
    };
    struct LOCAL3 {
      static int asSyslogFacility() {
        return LOG_LOCAL3;
      }
    };
    struct LOCAL4 {
      static int asSyslogFacility() {
        return LOG_LOCAL4;
      }
    };
    struct LOCAL5 {
      static int asSyslogFacility() {
        return LOG_LOCAL5;
      }
    };
    struct LOCAL6 {
      static int asSyslogFacility() {
        return LOG_LOCAL6;
      }
    };
    struct LOCAL7 {
      static int asSyslogFacility() {
        return LOG_LOCAL7;
      }
    };
    struct USER {
      static int asSyslogFacility() {
        return LOG_USER;
      }
    }; 
  }
}
#endif
#endif
